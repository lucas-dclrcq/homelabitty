---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-3.1.0/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app gotosocial
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    controllers:
      gotosocial:
        type: deployment
        replicas: 1

        containers:
          main:
            image:
              repository: "docker.io/superseriousbusiness/gotosocial"
              tag: "0.17.3@sha256:20b4d033dee4764104afc82eff5168d7fa29080ff8c99fbe7418a54b01a50591"

            env:
              TZ: "${TIMEZONE}"
              GTS_HOST: &host "social.${SECRET_DOMAIN}"
              GTS_ACCOUNT_DOMAIN: "${SECRET_DOMAIN}"
              GTS_ACCOUNTS_REGISTRATION_OPEN: "false"
              GTS_APPLICATION_NAME: "Hoohoot"
              GTS_PROTOCOL: "https" # not HTTP server listen mode, but used for generating URLs etc
              GTS_PORT: "8080"
              GTS_METRICS_ENABLED: "true"
              GTS_STORAGE_BACKEND: "s3"
              GTS_STORAGE_S3_PROXY: "true"
              GTS_STORAGE_S3_USE_SSL: "false"
              GTS_STORAGE_S3_ENDPOINT: "rook-ceph-rgw-ceph-objectstore.rook-ceph.svc.cluster.local"
              GTS_STORAGE_S3_BUCKET: "gotosocial-media"
              GTS_STORAGE_S3_ACCESS_KEY:
                valueFrom:
                  secretKeyRef:
                    name: "gotosocial-media-s3"
                    key: "AWS_ACCESS_KEY_ID"
              GTS_STORAGE_S3_SECRET_KEY:
                valueFrom:
                  secretKeyRef:
                    name: "gotosocial-media-s3"
                    key: "AWS_SECRET_ACCESS_KEY"

            envFrom:
              - secretRef:
                  name: gotosocial-secret

            securityContext:
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]

            resources:
              requests:
                cpu: 10m
                memory: 512Mi
              limits:
                memory: 1536Mi

    service:
      *app:
        controller: *app
        ports:
          http:
            port: 8080
            protocol: HTTP
            appProtocol: http

    ingress:
      main:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/proxy-body-size: 4096m
        hosts:
          - host: *host
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: *app
                  port: http
          - host: "${SECRET_DOMAIN}"
            paths:
              - path: /.well-known/webfinger
                pathType: Prefix
                service:
                  identifier: *app
                  port: http
              - path: /.well-known/host-meta
                pathType: Prefix
                service:
                  identifier: *app
                  port: http
              - path: /.well-known/nodeinfo
                pathType: Prefix
                service:
                  identifier: *app
                  port: http

    persistence:
      tmp:
        type: emptyDir
        medium: Memory
        globalMounts:
          - subPath: tmp
            path: /tmp # ffmpeg WASM stuff

    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: false
        runAsUser: "${APP_UID}"
        runAsGroup: "${APP_GID}"
        fsGroup: "${APP_GID}"
        fsGroupChangePolicy: Always
        seccompProfile: { type: "RuntimeDefault" }
