# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
---
# renovate: datasource=docker depName=ghcr.io/siderolabs/installer
talosVersion: 1.10.4
# renovate: datasource=docker depName=ghcr.io/siderolabs/kubelet
kubernetesVersion: v1.33.4

clusterName: "hoohoot"
endpoint: https://192.168.1.42:6443
clusterPodNets:
  - "10.69.0.0/16"
clusterSvcNets:
  - "10.96.0.0/16"
additionalApiServerCertSans: &sans
  - "192.168.1.42"
  - 127.0.0.1 # KubePrism
additionalMachineCertSans: *sans

# Disable built-in Flannel to use Cilium
cniConfig:
  name: none

nodes:
  - hostname: "fitz"
    ipAddress: "192.168.1.11"
    installDiskSelector:
      type: nvme
    talosImageURL: &imageUrl factory.talos.dev/installer/4b3cd373a192c8469e859b7a0cfbed3ecc3577c4a2d346a37b0aeff9cd17cdb0
    controlPlane: true
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "00:00:22:50:26:c6"
        dhcp: true
        addresses:
          - "192.168.1.11/24"
        routes:
          - network: 0.0.0.0/0
            gateway: "192.168.1.1"
        mtu: 1500
        vip:
          ip: "192.168.1.42"

  - hostname: "nighteyes"
    ipAddress: "192.168.1.12"
    installDiskSelector:
      type: nvme
    talosImageURL: *imageUrl
    controlPlane: true
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "00:00:22:50:25:cf"
        dhcp: true
        addresses:
          - "192.168.1.12/24"
        routes:
          - network: 0.0.0.0/0
            gateway: "192.168.1.1"
        mtu: 1500
        vip:
          ip: "192.168.1.42"

  - hostname: "chade"
    ipAddress: "192.168.1.13"
    installDiskSelector:
      type: nvme
    talosImageURL: *imageUrl
    controlPlane: true
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "00:00:22:50:26:55"
        dhcp: true
        addresses:
          - "192.168.1.13/24"
        routes:
          - network: 0.0.0.0/0
            gateway: "192.168.1.1"
        mtu: 1500
        vip:
          ip: "192.168.1.42"

  - hostname: "fool"
    ipAddress: "192.168.1.14"
    installDiskSelector:
      type: nvme
    talosImageURL: *imageUrl
    controlPlane: false
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "00:00:22:50:26:d8"
        dhcp: true
        addresses:
          - "192.168.1.14/24"
        routes:
          - network: 0.0.0.0/0
            gateway: "192.168.1.1"
        mtu: 1500

  - hostname: "burrich"
    ipAddress: "192.168.1.15"
    installDiskSelector:
      type: nvme
    talosImageURL: *imageUrl
    controlPlane: false
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "00:00:22:50:26:1e"
        dhcp: true
        addresses:
          - "192.168.1.15/24"
        routes:
          - network: 0.0.0.0/0
            gateway: "192.168.1.1"
        mtu: 1500

  - hostname: "bee"
    ipAddress: "192.168.1.16"
    installDiskSelector:
      type: nvme
    talosImageURL: *imageUrl
    controlPlane: false
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "00:00:22:50:26:d5"
        dhcp: true
        addresses:
          - "192.168.1.16/24"
        routes:
          - network: 0.0.0.0/0
            gateway: "192.168.1.1"
        mtu: 1500

# Global patches
patches:
  # Configure containerd
  - |
    machine:
      files:
        - op: create
          path: /etc/cri/conf.d/20-customization.part
          content: |
            [plugins."io.containerd.grpc.v1.cri"]
              enable_unprivileged_ports = true
              enable_unprivileged_icmp = true
            [plugins."io.containerd.grpc.v1.cri".containerd]
              discard_unpacked_layers = false
            [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
              discard_unpacked_layers = false

  # Configure NFS mount options
  - |
    machine:
      files:
        - op: overwrite
          path: /etc/nfsmount.conf
          permissions: 0o644
          content: |
            [ NFSMount_Global_Options ]
            nfsvers=4.2
            hard=True
            noatime=True
            nconnect=16

  # Disable search domain everywhere
  - |-
    machine:
      network:
        disableSearchDomain: true

  # Configure kubelet
  - |-
    machine:
      kubelet:
        extraArgs:
          image-gc-low-threshold: 50
          image-gc-high-threshold: 55
          rotate-server-certificates: true
        nodeIP:
          validSubnets:
            - 192.168.1.0/24

  # Custom sysctl settings
  - |-
    machine:
      sysctls:
        fs.inotify.max_user_watches: 1048576   # Watchdog
        fs.inotify.max_user_instances: 8192    # Watchdog
        net.core.default_qdisc: fq             # 2.5Gb/s
        net.core.rmem_max: 67108864            # 2.5Gb/s
        net.core.wmem_max: 67108864            # 2.5Gb/s
        net.ipv4.tcp_congestion_control: bbr   # 2.5Gb/s
        net.ipv4.tcp_fastopen: 3               # TCP Fast Open
        net.ipv4.tcp_rmem: 4096 87380 33554432 # 2.5Gb/s
        net.ipv4.tcp_wmem: 4096 65536 33554432 # 2.5Gb/s
        net.ipv4.tcp_window_scaling: 1         # 2.5Gb/s
        vm.nr_hugepages: "1024"

  # Custom sysfs settings # 5/6 nodes are 6c/12t and constantly throwing DMESG errors
  - |-
    machine:
      sysfs:
        devices.system.cpu.cpu0.cpufreq.energy_performance_preference: balance_power
        devices.system.cpu.cpu1.cpufreq.energy_performance_preference: balance_power
        devices.system.cpu.cpu2.cpufreq.energy_performance_preference: balance_power
        devices.system.cpu.cpu3.cpufreq.energy_performance_preference: balance_power
        devices.system.cpu.cpu4.cpufreq.energy_performance_preference: balance_power
        devices.system.cpu.cpu5.cpufreq.energy_performance_preference: balance_power
        devices.system.cpu.cpu6.cpufreq.energy_performance_preference: balance_power
        devices.system.cpu.cpu7.cpufreq.energy_performance_preference: balance_power
        devices.system.cpu.cpu8.cpufreq.energy_performance_preference: balance_power
        devices.system.cpu.cpu9.cpufreq.energy_performance_preference: balance_power
        devices.system.cpu.cpu10.cpufreq.energy_performance_preference: balance_power
        devices.system.cpu.cpu11.cpufreq.energy_performance_preference: balance_power

  # Mount openebs-hostpath in kubelet
  - |-
    machine:
      kubelet:
        extraMounts:
          - destination: /var/openebs/local
            type: bind
            source: /var/openebs/local
            options: ["bind", "rshared", "rw"]

  - |-
    machine:
      install:
        extraKernelArgs:
          - apparmor=0           # Less security, More speed
          - init_on_alloc=0      # Less security, More speed
          - init_on_free=0       # Less security, More speed
          - mitigations=off      # Less security, More speed
          - security=none        # Less security, More speed
          - net.ifnames=1        # Enable predictable NIC naming

  # Host DNS
  - |-
    machine:
      features:
        hostDNS:
          enabled: true
          resolveMemberNames: true
          forwardKubeDNSToHost: false # Requires Cilium `bpf.masquerade: false`

# Controller patches
controlPlane:
  patches:
    # Cluster configuration
    - |-
      cluster:
        allowSchedulingOnControlPlanes: true
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
        coreDNS:
          disabled: true
        proxy:
          disabled: true
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # ETCD configuration
    - |-
      cluster:
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
          advertisedSubnets:
            - 192.168.1.0/24

    # Enable MutatingAdmissionPolicy
    - |-
      cluster:
        apiServer:
          extraArgs:
            runtime-config: admissionregistration.k8s.io/v1alpha1=true
            feature-gates: MutatingAdmissionPolicy=true
