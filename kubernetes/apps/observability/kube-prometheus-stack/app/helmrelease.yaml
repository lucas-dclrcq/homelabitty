---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 66.7.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  install:
    crds: Skip
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: Skip
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: prometheus-operator-crds
      namespace: observability
    - name: openebs
      namespace: openebs-system
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    crds:
      enabled: false

    cleanPrometheusOperatorObjectNames: true

    alertmanager:
      ingress:
        enabled: true
        ingressClassName: internal
        hosts:
          - &alert_host "alertmanager.${LIMITED_DOMAIN}"
        pathType: Prefix
        tls:
          - hosts:
              - *alert_host
            secretName: "${LIMITED_DOMAIN/./-}-production-tls"
      alertmanagerSpec:
        useExistingSecret: true
        configSecret: alertmanager-secret
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 2Gi

    kubeApiServer:
      serviceMonitor:
        selector:
          k8s-app: kube-apiserver

    kubeScheduler:
      service:
        selector:
          k8s-app: kube-scheduler

    kubeControllerManager: &kubeControllerManager
      service:
        selector:
          k8s-app: kube-controller-manager

    kubeEtcd:
      <<: *kubeControllerManager # etcd runs on control plane nodes

    kubeProxy:
      enabled: false

    prometheus:
      ingress:
        enabled: true
        ingressClassName: internal
        hosts:
          - &prom_host "prometheus.${LIMITED_DOMAIN}"
        pathType: Prefix
        tls:
          - hosts:
              - *prom_host
            secretName: "${LIMITED_DOMAIN/./-}-production-tls"
      prometheusSpec:
        scrapeInterval: 1m # Must match interval in Grafana Helm chart
        podMonitorSelector: &selector
          matchLabels: null
        probeSelector: *selector
        ruleSelector: *selector
        scrapeConfigSelector: *selector
        serviceMonitorSelector: *selector
        enableAdminAPI: true
        walCompression: true
        enableFeatures:
          - auto-gomemlimit
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        retention: 14d
        retentionSize: 70GB
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            memory: 4Gi
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: openebs-hostpath
              resources:
                requests:
                  storage: 75Gi

    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node

    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node

    grafana:
      enabled: false
      forceDeployDashboards: true
