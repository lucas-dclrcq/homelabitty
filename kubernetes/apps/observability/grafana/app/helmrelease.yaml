---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      version: 8.9.0
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    deploymentStrategy:
      type: Recreate

    env:
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true
      GF_SERVER_ROOT_URL: "https://grafana.${SECRET_DOMAIN}"

    extraSecretMounts:
      - name: auth-generic-oauth-secret-mount
        secretName: grafana-oauth-secret
        defaultMode: 0440
        mountPath: /etc/secrets/auth_generic_oauth
        readOnly: true

    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth.anonymous:
        enabled: false
      auth:
        signout_redirect_url: "https://sso.${SECRET_DOMAIN}/application/o/grafana/end-session/"
        oauth_auto_login: true
      auth.generic_oauth:
        name: authentik
        enabled: true
        client_id: "$__file{/etc/secrets/auth_generic_oauth/client_id}"
        client_secret: "$__file{/etc/secrets/auth_generic_oauth/client_secret}"
        scopes: "openid profile email"
        auth_url: "https://sso.${SECRET_DOMAIN}/application/o/authorize/"
        token_url: "https://sso.${SECRET_DOMAIN}/application/o/token/"
        api_url: "https://sso.${SECRET_DOMAIN}/application/o/userinfo/"
        # Optionally map user groups to Grafana roles
        role_attribute_path: contains(groups, 'Hoohoot Admins') && 'Admin' || contains(groups, 'Hoohoot Developers') && 'Editor' || 'Viewer'
      news:
        news_feed_enabled: false

    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - { name: Alertmanager, orgId: 1 }
          - { name: Loki, orgId: 1 }
          - { name: Prometheus, orgId: 1 }
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            url: http://prometheus-operated.observability.svc.cluster.local:9090
            jsonData:
              timeInterval: 1m
            isDefault: true
          - name: Loki
            type: loki
            uid: loki
            access: proxy
            url: http://loki-headless.observability.svc.cluster.local:3100
            jsonData:
              maxLines: 250
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            access: proxy
            url: http://alertmanager-operated.observability.svc.cluster.local:9093
            jsonData:
              implementation: prometheus

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: storage
            orgId: 1
            folder: Storage
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/storage
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: network
            orgId: 1
            folder: Network
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/network
          - name: postgresql
            orgId: 1
            folder: PostgreSQL
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/postgresql
          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: apps
            orgId: 1
            folder: Apps
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/apps
          - name: observability
            orgId: 1
            folder: Observability
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/observability
          - name: unpoller
            disableDeletion: false
            editable: true
            folder: "UniFi Poller"
            options:
              path: /var/lib/grafana/dashboards/unpoller
            orgId: 1
            type: file

    dashboards:
      storage:
        ceph-cluster:
          # renovate: depName="Ceph Cluster"
          gnetId: 2842
          revision: 18
          datasource: Prometheus
        ceph-osd:
          # renovate: depName="Ceph - OSD (Single)"
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        ceph-pools:
          # renovate: depName="Ceph - Pools"
          gnetId: 5342
          revision: 9
          datasource: Prometheus
        host-overview:
          url: https://raw.githubusercontent.com/ceph/ceph/main/monitoring/ceph-mixin/dashboards_out/hosts-overview.json
          datasource: Prometheus

      network:
        cert-manager:
          # renovate: depName="Cert-manager-Kubernetes"
          gnetId: 20842
          revision: 3
          datasource: Prometheus
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus

      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: Prometheus

      postgresql:
        crunchy-pgbackrest: #https://github.com/CrunchyData/postgres-operator-examples/issues/264
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/pgbackrest.json
          datasource: Prometheus
        crunchy-pod-details:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/pod_details.json
          datasource: Prometheus
        crunchy-postgresql-details:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/postgresql_details.json
          datasource: Prometheus
        crunchy-postgresql-overview:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/postgresql_overview.json
          datasource: Prometheus
        crunchy-postgresql-service_health:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/postgresql_service_health.json
          datasource: Prometheus
        crunchy-prometheus-alerts:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/prometheus_alerts.json
          datasource: Prometheus
        crunchy-query-statistics:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/query_statistics.json
          datasource: Prometheus

      kubernetes:
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 19
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 20
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 43
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 42
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 32
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 34
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus

      apps:
        miniflux:
          url: https://raw.githubusercontent.com/miniflux/v2/main/contrib/grafana/dashboard.json
          datasource: Prometheus
        matrix-synapse:
          url: https://raw.githubusercontent.com/element-hq/synapse/master/contrib/grafana/synapse.json
          datasource: Prometheus
        flaresolverr:
          # renovate: depName="FlareSolverr"
          gnetId: 19363
          version: 1
          datasource: Prometheus
        navidrome:
          # renovate: depName="Navidrome"
          gnetId: 18038
          version: 1
          datasource:
            - name: "DS_PROMETHEUS"
              value: Prometheus
            - name: "DS_VICTORIAMETRICS"
              value: Prometheus

      observability:
        prometheus:
          # renovate: depName="Prometheus"
          gnetId: 19105
          revision: 6
          datasource: Prometheus
        blackbox-exporter:
          # renovate: depName="Prometheus Blackbox Exporter"
          gnetId: 7587
          revision: 3
          datasource: Prometheus
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 37
          datasource: Prometheus

      unpoller:
        unifi-insights:
          # renovate: dashboardName="UniFi-Poller: Client Insights - Prometheus"
          gnetId: 11315
          revision: 9
          datasource: Prometheus
        unifi-network-sites:
          # renovate: dashboardName="UniFi-Poller: Network Sites - Prometheus"
          gnetId: 11311
          revision: 5
          datasource: Prometheus
        unifi-usw:
          # renovate: dashboardName="UniFi-Poller: USW Insights - Prometheus"
          gnetId: 11312
          revision: 9
          datasource:
            - name: "DS_PROMETHEUS"
              value: Prometheus
        unifi-uap:
          # renovate: dashboardName="UniFi-Poller: UAP Insights - Prometheus"
          gnetId: 11314
          revision: 10
          datasource:
            - name: "DS_PROMETHEUS"
              value: Prometheus

      default:
        node-feature-discovery:
          url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
          datasource: Prometheus
        vault:
          # renovate: depName="Hashicorp Vault"
          gnetId: 12904
          revision: 2
          datasource: Prometheus
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
        apc-ups:
          # renovate: depName="APC UPS (SNMP)"
          gnetId: 12340
          revision: 1
          datasource: Prometheus

    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""

    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel

    serviceMonitor:
      enabled: true

    ingress:
      enabled: true
      ingressClassName: external
      annotations:
        external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
      hosts: ["grafana.${SECRET_DOMAIN}"]

    persistence:
      enabled: false

    testFramework:
      enabled: false
