---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app nextcloud
spec:
  interval: 30m
  chart:
    spec:
      chart: nextcloud
      version: 6.1.1
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    fullnameOverride: *app
    deploymentAnnotations:
      secret.reloader.stakater.com/reload: &secret nextcloud-secret

    image:
      repository: public.ecr.aws/docker/library/nextcloud
      tag: 30.0.1-fpm-alpine
      flavor: fpm-alpine

    nextcloud:
      host: nextcloud.${SECRET_DOMAIN}

      existingSecret:
        enabled: true
        secretName: *secret
        usernameKey: nextcloud-username
        passwordKey: nextcloud-password

      extraEnv:
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: *secret
              key: S3_ACCESS_KEY
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: *secret
              key: S3_SECRET_KEY
        - name: REDIS_HOST
          value: dragonfly.infrastructure.svc.cluster.local
        - name: REDIS_HOST_PORT
          value: "6379"

      mail:
        enabled: false

      objectstore:
        s3:
          enabled: true
          host: minio.infrastructure.svc.cluster.local:9000
          ssl: false
          bucket: nextcloud-data
          usePathStyle: true
          region: us-east-1
          autocreate: true
          existingSecret: nextcloud-secret
          secretKeys:
            accessKey: S3_ACCESS_KEY
            secretKey: S3_SECRET_KEY

      configs:
        https.config.php: |-
          <?php
          $CONFIG = array (
            'overwritehost' => 'nextcloud.${SECRET_DOMAIN}',
            'overwriteprotocol' => 'https'
          );

    redis:
      enabled: false

    nginx:
      enabled: true
      image:
        repository: nginx
        tag: 1.27-alpine

    internalDatabase:
      enabled: false

    externalDatabase:
      enabled: true
      type: postgresql
      host: postgres-primary.infrastructure.svc.cluster.local:5432
      database: nextclouddb
      existingSecret:
        enabled: true
        secretName: *secret
        usernameKey: POSTGRES_USER
        passwordKey: POSTGRES_PASSWORD

    ingress:
      enabled: true
      className: external
      annotations:
        external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        nginx.ingress.kubernetes.io/proxy-body-size: 512M
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/server-snippet: |
          server_tokens off;
          location ^~ /.well-known {
            location = /.well-known/carddav { return 301 /remote.php/dav/; }
            location = /.well-known/caldav { return 301 /remote.php/dav/; }
            location = /.well-known/acme-challenge { try_files $uri $uri/ =404; }
            location = /.well-known/pki-validation { try_files $uri $uri/ =404; }
            return 301 /index.php$request_uri;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/)  { return 404; }
          location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console)                { return 404; }
      tls:
        - hosts:
            - nextcloud.${SECRET_DOMAIN}
          secretName: "${SECRET_DOMAIN/./-}-production-tls"

    persistence:
      enabled: true
      existingClaim: *app

    cronjob:
      enabled: true

    hpa:
      enabled: false

    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    startupProbe:
      enabled: false

    resources:
      limits:
        memory: 4Gi
      requests:
        memory: 2Gi
