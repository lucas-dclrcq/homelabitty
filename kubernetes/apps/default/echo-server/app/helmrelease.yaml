---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app echo-server
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: *app
  values:
    controllers:
      echo-server:
        strategy: RollingUpdate
        pod:
          labels:
            ingress.home.arpa/envoy-external: allow
            ingress.home.arpa/prometheus: allow
        containers:
          app:
            image:
              repository: ghcr.io/mendhak/http-https-echo
              tag: 38
            env:
              HTTP_PORT: &port 8080
              LOG_WITHOUT_NEWLINE: true
              LOG_IGNORE_PATH: /healthz
              PROMETHEUS_ENABLED: true
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
              seccompProfile:
                type: RuntimeDefault

            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 100Mi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        seccompProfile: {type: RuntimeDefault}

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    serviceMonitor:
      app:
        serviceName: *app
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s

    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
        parentRefs:
          - name: external
            namespace: network

        rules:
          - backendRefs:
              - name: *app
                port: *port
