---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app prowlarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      prowlarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/prowlarr-develop
              tag: 1.32.1.4983@sha256:2843eddba1d11bde19b733a9226b996775fcb39701ca0c6c1e746222ded35dc6
            env:
              PROWLARR__APP__INSTANCENAME: Prowlarr
              PROWLARR__AUTH__METHOD: External
              PROWLARR__AUTH__REQUIRED: DisabledForLocalAddresses
              PROWLARR__LOG__DBENABLED: "False"
              PROWLARR__POSTGRES__HOST: "postgres-16-pgbouncer.infrastructure.svc.cluster.local"
              PROWLARR__POSTGRES__PORT: "5432"
              PROWLARR__POSTGRES__MAINDB: "prowlarr_main"
              PROWLARR__LOG__LEVEL: info
              PROWLARR__SERVER__PORT: &port 80
              PROWLARR__UPDATE__BRANCH: develop
              TZ: "${TIMEZONE}"

            envFrom:
              - secretRef:
                  name: prowlarr-secret
              - secretRef:
                  name: prowlarr-db-secret

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 1Gi
          exporter:
            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.0.1@sha256:9126280c89e194e668b2667bdaa054a772f8793923135b5c74f4f3870a71c059

            args:
              - prowlarr

            env:
              PORT: &metrics_port 9090
              URL: http://localhost
              API_KEY:
                valueFrom:
                  secretKeyRef:
                    key: PROWLARR__AUTH__APIKEY
                    name: prowlarr-secret
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true

            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: prowlarr
        ports:
          http:
            port: *port
          exporter:
            port: *metrics_port

    serviceMonitor:
      app:
        serviceName: *app
        endpoints:
          - port: exporter
            scheme: http
            path: /metrics
            interval: 30s
            scrapeTimeout: 10s

    ingress:
      app:
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${LIMITED_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${LIMITED_DOMAIN/./-}-production-tls"

    persistence:
      config:
        type: emptyDir
      tmp:
        type: emptyDir
