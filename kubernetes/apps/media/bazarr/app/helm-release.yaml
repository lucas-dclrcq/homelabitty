---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: bazarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  dependsOn:
    - name: longhorn
      namespace: longhorn-system

  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: ghcr.io/onedr0p/bazarr
      tag: 1.2.4@sha256:80fbe89f5806015d67aa78c60bf64c068998507d08db5ea05ac7b9916dabb880

    env:
      TZ: "${TIMEZONE}"

    envFrom:
      - secretRef:
          name: bazarr

    service:
      main:
        ports:
          http:
            port: 6767

    ingress:
      main:
        enabled: true
        ingressClassName: ingress-traefik
        annotations:
          traefik.ingress.kubernetes.io/router.middlewares: "networking-sso@kubernetescrd"
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
          hajimari.io/icon: mdi:subtitles-outline
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    podSecurityContext:
      runAsUser: 1026
      runAsGroup: 100
      fsGroup: 100
      fsGroupChangePolicy: OnRootMismatch

    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: longhorn

    persistence:
      media:
        enabled: true
        type: nfs
        server: "nas.${INTERNAL_DOMAIN}"
        path: /volume1/Media
        mountPath: /media
      add-ons:
        enabled: true
        type: emptyDir
        mountPath: /add-ons

    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 2000Mi

    sidecars:
      subcleaner:
        image: registry.k8s.io/git-sync/git-sync:v4.0.0
        imagePullPolicy: IfNotPresent
        args:
          - --repo=https://github.com/KBlixt/subcleaner
          - --branch=master
          - --wait=86400 # 1 day
          - --root=/add-ons
        volumeMounts:
          - { name: add-ons, mountPath: /add-ons }
