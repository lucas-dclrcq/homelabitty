apiVersion: batch/v1
kind: CronJob
metadata:
  name: vault-snapshot-cronjob
spec:
  schedule: "@every 12h"
  jobTemplate:
    spec:
      template:
        spec:
          volumes:
            - name: share
              emptyDir: { }
          containers:
            - name: snapshot
              image: vault:1.13.3
              imagePullPolicy: IfNotPresent
              command:
                - /bin/sh
              args:
                - -ec
                - |
                  apk add curl jq
                  export VAULT_TOKEN=$(vault write auth/approle/login role_id=$VAULT_APPROLE_ROLE_ID secret_id=$VAULT_APPROLE_SECRET_ID -format=json | jq -r .auth.client_token);
                  vault operator raft snapshot save /share/vault-raft.snap;
              envFrom:
                - secretRef:
                    name: vault-snapshot-agent-token
              env:
                - name: VAULT_ADDR
                  value: http://vault-active.vault.svc.cluster.local:8200
              volumeMounts:
                - mountPath: /share
                  name: share
            - name: upload
              image: amazon/aws-cli:2.17.56
              imagePullPolicy: IfNotPresent
              command:
                - /bin/sh
              args:
                - -ec
                - |
                  until [ -f /share/vault-raft.snap ]; do sleep 5; done;
                  aws --endpoint-url $MINIO_URL s3 cp /share/vault-raft.snap s3://$MINIO_BUCKET/vault_raft_$(date +"%Y%m%d_%H%M%S").snap;
              env:
                - name: MINIO_BUCKET
                  value: vault-backup
                - name: MINIO_URL
                  value: http://minio.infrastructure.svc.cluster.local:9000
              envFrom:
                - secretRef:
                    name: vault-snapshot-s3
              volumeMounts:
                - mountPath: /share
                  name: share
          restartPolicy: OnFailure
