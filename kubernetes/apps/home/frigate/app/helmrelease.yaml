---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app frigate
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      nodeSelector:
        google.feature.node.kubernetes.io/coral: "true"
        intel.feature.node.kubernetes.io/gpu: "true"

    controllers:
      frigate:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: 0.16.0-beta3@sha256:944dbf199f1cbe99cfedc74b7cd9791daa68a334d4e9f74214a06dde58c1458a

            env:
              TZ: ${TIMEZONE}

            envFrom:
              - secretRef:
                  name: frigate-secret

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: &port 5000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

            resources:
              requests:
                cpu: 10m
                memory: 1000Mi
                gpu.intel.com/i915: 1
              limits:
                memory: 6000Mi
                gpu.intel.com/i915: 1

            securityContext:
              privileged: true

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
          go2rtc:
            port: 1984
          rtsp:
            port: 8554
          webrtc:
            port: 8555
            protocol: TCP
          webrtc-udp:
            port: 8555
            protocol: UDP

    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${LIMITED_DOMAIN}"
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        enabled: true
        existingClaim: *app
        globalMounts:
          - path: /data
      config-file:
        type: configMap
        name: frigate-configmap
        globalMounts:
          - path: /config/config.yml
            subPath: config.yml
            readOnly: true
      media:
        type: nfs
        server: "truenas.${INTERNAL_DOMAIN}"
        path: /mnt/tank/Cameras
        globalMounts:
          - path: /media/frigate
      cache:
        type: emptyDir
        medium: Memory
        sizeLimit: 4Gi
        globalMounts:
          - path: /dev/shm
      usb:
        type: hostPath
        hostPath: /dev/bus/usb
        hostPathType: Directory
        advancedMounts:
          frigate:
            app:
              - path: /dev/bus/usb
