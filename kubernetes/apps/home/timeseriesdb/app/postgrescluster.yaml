---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/postgres-operator.crunchydata.com/postgrescluster_v1beta1.json
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name timeseries
spec:
  postgresVersion: 17

  service:
    type: LoadBalancer
    metadata:
      annotations:
        external-dns.alpha.kubernetes.io/hostname: "timeseries.postgres.${LIMITED_DOMAIN}"

  patroni: # turn on sync writes to at least 1 other replica
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        parameters:
          shared_preload_libraries: timescaledb
          max_connections: 300
        max_wal_size: 5GB
        synchronous_commit: "on"
        pg_hba:
          - hostnossl all all 10.69.0.0/16 md5
          - hostssl all all all md5

  instances:
    - name: postgres
      metadata:
        labels:
          app.kubernetes.io/name: timeseries-crunchy-postgres
      replicas: 3
      dataVolumeClaimSpec:
        storageClassName: openebs-hostpath
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name

  users:
    - name: "postgres"
      databases:
        - "postgres"
      options: "SUPERUSER"
      password:
        type: AlphaNumeric
    - name: "garmin"
      databases:
        - "garmin"
      password:
        type: AlphaNumeric

  backups:
    pgbackrest:
      configuration: &backupConfig
        - secret:
            name: timeseries-postgres-secret
      global: &backupFlag
        compress-type: "bz2"
        compress-level: "9"
        # Minio
        repo1-block: "y"
        repo1-bundle: "y"
        repo1-path: /crunchy-pgo
        repo1-retention-full: "30" # days
        repo1-retention-full-type: "time"
        repo1-s3-uri-style: path
      manual:
        repoName: repo1
        options:
          - --type=full
      metadata:
        labels:
          app.kubernetes.io/name: postgres-timeseries-backup
      repos:
        - name: repo1 # Minio
          s3: &minio
            bucket: "postgres-timeseries-backup"
            endpoint: "s3.${LIMITED_DOMAIN}"
            region: "us-east-1"
          schedules:
            full: "0 1 * * 0" # Sunday at 01:00
            differential: "0 1 * * 1-6" # Mon-Sat at 01:00
            incremental: "30 3-23 * * *" # Every hour except 01:30-2:30
