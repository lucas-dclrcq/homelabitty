---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      version: 7.1.0
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: local-path-provisioner
      namespace: kube-system
    - name: ingress-traefik
      namespace: networking
  values:
    admin:
      existingSecret: grafana-admin-secret
    env:
      GF_EXPLORE_ENABLED: true
      GF_SERVER_ROOT_URL: "https://grafana.${SECRET_DOMAIN}"
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
      news:
        news_feed_enabled: false
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: core
            orgId: 1
            folder: Core
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/core
          - name: apps
            orgId: 1
            folder: Apps
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/apps
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: thanos
            orgId: 1
            folder: Thanos
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/thanos
          - name: networking
            orgId: 1
            folder: Networking
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/networking
          - name: infrastructure
            orgId: 1
            folder: Infrastructure
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/infrastructure
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - { name: Alertmanager, orgId: 1 }
          - { name: Loki, orgId: 1 }
          - { name: Prometheus, orgId: 1 }
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            url: http://thanos-query-frontend.monitoring.svc.cluster.local:9090
            jsonData:
              prometheusType: Thanos
            isDefault: true
          - name: Loki
            type: loki
            uid: loki
            access: proxy
            url: http://loki-gateway.monitoring.svc.cluster.local
            jsonData:
              maxLines: 250
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            access: proxy
            url: http://alertmanager-operated.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
    plugins:
      - grafana-piechart-panel
    dashboards:
      default:
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 31
          datasource: Prometheus
      infrastructure:
        redpanda:
          # renovate: depName="Redpanda Ops Dashboard"
          gnetId: 28235
          revision: 2
          datasource: Prometheus
        redis:
          # renovate: depName="Redis Dashboard for Prometheus Redis Exporter 1.x"
          gnetId: 763
          revision: 5
          datasource: Prometheus
      apps:
        miniflux:
          url: https://raw.githubusercontent.com/miniflux/v2/main/contrib/grafana/dashboard.json
          datasource: Prometheus
        arr:
          url: https://raw.githubusercontent.com/onedr0p/exportarr/master/examples/grafana/dashboard2.json
          datasource: Prometheus
        synapse:
          url: https://raw.githubusercontent.com/lucas-dclrcq/homelabitty/main/dashboards/synapse.json
          datasource: Prometheus
        emqx:
          gnetId: 17446
          revision: 1
          datasource: Prometheus
      core:
        longhorn:
          gnetId: 17626
          revision: 1
          datasource: Prometheus
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        spegel:
          # renovate: depName="Spegel"
          gnetId: 18089
          revision: 1
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
      networking:
        traefik:
          gnetId: 11462
          revision: 1
          datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        external-dns:
          gnetId: 15038 # https://grafana.com/grafana/dashboards/15038?tab=revisions
          revision: 1
          datasource: Prometheus
        speedtest:
          url: https://raw.githubusercontent.com/lucas-dclrcq/homelabitty/main/dashboards/speedtest.json
          datasource: Prometheus
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/logs.json
          datasource: Prometheus
      kubernetes:
        kubernetes-api-server:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
          datasource: Prometheus
        kubernetes-coredns:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
          datasource: Prometheus
        kubernetes-global:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
          datasource: Prometheus
        kubernetes-namespaces:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
          datasource: Prometheus
        kubernetes-nodes:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
          datasource: Prometheus
        kubernetes-pods:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
          datasource: Prometheus
      thanos:
        thanos-bucket-replicate:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/bucket-replicate.json
          datasource: Prometheus
        thanos-compact:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/compact.json
          datasource: Prometheus
        thanos-overview:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/overview.json
          datasource: Prometheus
        thanos-query:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query.json
          datasource: Prometheus
        thanos-query-frontend:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query-frontend.json
          datasource: Prometheus
        thanos-receieve:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/receive.json
          datasource: Prometheus
        thanos-rule:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/rule.json
          datasource: Prometheus
        thanos-sidecar:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/sidecar.json
          datasource: Prometheus
        thanos-store:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/store.json
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: ingress-traefik
      annotations:
        traefik.ingress.kubernetes.io/router.middlewares: "networking-lan-only@kubernetescrd"
        hajimari.io/icon: simple-icons:grafana
      hosts:
        - &host "grafana.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - *host
    persistence:
      enabled: true
      storageClassName: local-path
    testFramework:
      enabled: false
