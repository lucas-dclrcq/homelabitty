---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      version: 6.60.1
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: local-path-provisioner
      namespace: kube-system
    - name: ingress-traefik
      namespace: networking
  values:
    admin:
      existingSecret: grafana-admin-secret
    env:
      GF_EXPLORE_ENABLED: true
      GF_SERVER_ROOT_URL: "https://grafana.${SECRET_DOMAIN}"
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
            isDefault: true
          - name: Loki
            type: loki
            uid: loki
            access: proxy
            url: http://loki-gateway.monitoring.svc.cluster.local
            jsonData:
              maxLines: 250
    plugins:
      - grafana-piechart-panel
    dashboards:
      default:
        arr:
          url: https://raw.githubusercontent.com/onedr0p/exportarr/master/examples/grafana/dashboard2.json
          datasource: Prometheus
        radarr:
          url: https://raw.githubusercontent.com/onedr0p/exportarr/master/examples/grafana/dashboard.json
          datasource: Prometheus
        synapse:
          url: https://raw.githubusercontent.com/lucas-dclrcq/homelabitty/main/dashboards/synapse.json
          datasource: Prometheus
        redpanda:
          gnetId: 18135
          revision: 1
          datasource: Prometheus
        miniflux:
          url: https://raw.githubusercontent.com/miniflux/v2/main/contrib/grafana/dashboard.json
          datasource: Prometheus
        traefik:
          gnetId: 11462
          revision: 1
          datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        external-dns:
          gnetId: 15038 # https://grafana.com/grafana/dashboards/15038?tab=revisions
          revision: 1
          datasource: Prometheus
        speedtest:
          url: https://raw.githubusercontent.com/lucas-dclrcq/homelabitty/main/dashboards/speedtest.json
          datasource: Prometheus
        node-exporter-full:
          gnetId: 1860 # https://grafana.com/grafana/dashboards/1860?tab=revisions
          revision: 31
          datasource: Prometheus
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
        longhorn:
          gnetId: 17626
          revision: 1
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: ingress-traefik
      annotations:
        traefik.ingress.kubernetes.io/router.middlewares: "networking-lan-only@kubernetescrd"
        hajimari.io/icon: simple-icons:grafana
      hosts:
        - &host "grafana.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - *host
    persistence:
      enabled: true
      storageClassName: local-path
    testFramework:
      enabled: false
