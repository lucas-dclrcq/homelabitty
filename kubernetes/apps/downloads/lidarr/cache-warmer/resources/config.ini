[lidarr]
# Default Lidarr URL
base_url = http://lidarr.downloads.svc.cluster.local:8686
api_key  = {{ .LIDARR__AUTH__APIKEY }}

[probe]
# API to probe for each MBID
target_base_url = https://api.lidarr.audio/api/v0.4
timeout_seconds = 10

# Shared API settings
delay_between_attempts = 0.25
max_concurrent_requests = 10
rate_limit_per_second = 5

# Per-entity cache warming settings
max_attempts_per_artist = 25
max_attempts_per_artist_textsearch = 25
max_attempts_per_rg = 15

# Circuit breaker settings
circuit_breaker_threshold = 50
backoff_factor = 0.5
max_backoff_seconds = 15

[ledger]
# Storage backend: csv (default) or sqlite
storage_type = sqlite

# CSV file paths (used when storage_type = csv)
artists_csv_path = /data/mbid-artists.csv
release_groups_csv_path = /data/mbid-releasegroups.csv

# SQLite database path (used when storage_type = sqlite)
db_path = /data/mbid_cache.db

[run]
# Processing control - enable/disable each phase
process_release_groups = false
process_artist_textsearch = true
process_manual_entries = false
force_artists = false
force_rg = false
force_text_search = false
batch_size = 25
batch_write_frequency = 5

[manual]
# Manual entry injection from YAML file
manual_entries_file = /data/manual_entries.yml

[actions]
# If true, when a probe transitions from (no status or timeout) -> success,
# trigger a non-blocking refresh of that artist in Lidarr.
update_lidarr = false

[schedule]
# Used by entrypoint.py (scheduler) if you run that directly
interval_seconds = 3600
run_at_start = true
max_runs = 25

[monitoring]
log_progress_every_n = 25
log_level = INFO
