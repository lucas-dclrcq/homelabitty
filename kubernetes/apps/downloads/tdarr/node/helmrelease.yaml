---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app tdarr-node
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    defaultPodOptions:
      securityContext:
        fsGroup: 1500
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups:
          - 44 # Required for Intel iGPU on Ubuntu base containers like Tdarr
          - 10000
        seccompProfile: { type: RuntimeDefault }
    controllers:
      tdarr-node:
        replicas: 5
        containers:
          node:
            image:
              repository: haveagitgat/tdarr_node
              tag: 2.40.01@sha256:ac6d8451148b311d99be1e0e3978bc866009ee412f9644f521374a5dd7f3c4c5
            env:
              - name: nodeID
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
              - name: serverIP
                value: tdarr.downloads.svc.cluster.local.
              - name: serverPort
                value: 8266
              - name: PUID
                value: ${APP_UID}
              - name: PGID
                value: ${APP_GID}
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
                gpu.intel.com/i915: 1
              limits:
                memory: 2Gi
                cpu: 4
                gpu.intel.com/i915: 1
            securityContext:
              capabilities:
                add:
                  - CHOWN
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: intel.feature.node.kubernetes.io/gpu=true
                  operator: In
                  values:
                    - "true"
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                    - "jellyfin"
                    - "tdarr-node"
            topologyKey: "kubernetes.io/hostname"

    service:
      app:
        controller: *app
        enabled: false
    persistence:
      media:
        type: nfs
        server: "truenas.${INTERNAL_DOMAIN}"
        path: /mnt/tank/Media
        globalMounts:
          - path: /media
