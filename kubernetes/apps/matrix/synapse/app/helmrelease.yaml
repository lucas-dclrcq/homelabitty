---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app synapse
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://ananace.gitlab.io/charts
      chart: matrix-synapse
      version: 3.9.12
      sourceRef:
        kind: HelmRepository
        name: ananace-charts
        namespace: flux-system
      interval: 5m
  values:
    serverName: "${SECRET_DOMAIN}"
    publicServerName: "matrix.${SECRET_DOMAIN}"

    wellknown:
      enabled: true
      image:
        repository: ghcr.io/rtsp/docker-lighttpd
        tag: 1.4.76
      client:
        m.homeserver:
          base_url: "https://matrix.${SECRET_DOMAIN}"
        org.matrix.msc3575.proxy:
          url: "https://syncv3.${SECRET_DOMAIN}"

    workers:
      default:
        resources:
          limits:
            memory: 1Gi
          requests:
            memory: 512Mi

      media_repository:
        enabled: false
        strategy:
          type: Recreate

      federation_sender:
        enabled: false
        replicaCount: 2

      generic_worker:
        enabled: false
        generic: true
        replicaCount: 2
        listeners: [client]
        csPaths:
          ## Client API requests
          - "/_matrix/client/(api/v1|r0|v3|unstable)/createRoom$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/publicRooms$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/joined_members$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/context/"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/members$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/state$"
          - "/_matrix/client/v1/rooms/.*/hierarchy$"
          - "/_matrix/client/unstable/org.matrix.msc2716/rooms/.*/batch_send$"
          - "/_matrix/client/unstable/im.nheko.summary/rooms/.*/summary$"
          - "/_matrix/client/(r0|v3|unstable)/account/3pid$"
          - "/_matrix/client/(r0|v3|unstable)/account/whoami$"
          - "/_matrix/client/(r0|v3|unstable)/devices$"
          - "/_matrix/client/versions$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/voip/turnServer$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/event/"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/joined_rooms$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/search$"

          ## Encryption requests
          - "/_matrix/client/(r0|v3|unstable)/keys/query$"
          - "/_matrix/client/(r0|v3|unstable)/keys/changes$"
          - "/_matrix/client/(r0|v3|unstable)/keys/claim$"
          - "/_matrix/client/(r0|v3|unstable)/room_keys/"

          ## Registration/login requests
          - "/_matrix/client/(api/v1|r0|v3|unstable)/login$"
          - "/_matrix/client/(r0|v3|unstable)/register$"
          - "/_matrix/client/v1/register/m.login.registration_token/validity$"

          ## Event sending requests
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/redact"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/send"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/state/"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/(join|invite|leave|ban|unban|kick)$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/join/"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/profile/"

          ## User directory search requests
          - "/_matrix/client/(r0|v3|unstable)/user_directory/search"

      synchrotron:
        enabled: false
        generic: true
        listeners: [client]
        csPaths:
          - "/_matrix/client/(v2_alpha|r0|v3)/sync$"
          - "/_matrix/client/(api/v1|v2_alpha|r0|v3)/events$"
          - "/_matrix/client/(api/v1|r0|v3)/initialSync$"
          - "/_matrix/client/(api/v1|r0|v3)/rooms/[^/]+/initialSync$"

      frontend_proxy:
        enabled: false

    extraConfig:
      presence:
        enabled: true

      enable_3pid_lookup: false
      app_service_config_files:
        - "/discord/registration.yml"
      use_appservice_legacy_authorization: true
      oidc_providers:
        - idp_id: authentik
          idp_name: Hoohoot SSO
          discover: true
          issuer: "https://sso.${SECRET_DOMAIN}/application/o/matrix/"
          client_id: "${MATRIX_CLIENT_ID}"
          client_secret: "${MATRIX_CLIENT_SECRET}"
          scopes:
            - "openid"
            - "profile"
            - "email"
          user_mapping_provider:
            config:
              localpart_template: "{{ user.nickname }}"
              display_name_template: "{{ user.name | capitalize }}"

    ingress:
      enabled: true
      className: external
      annotations:
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/proxy-body-size: 10m
        external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"

    postgresql:
      enabled: false

    redis:
      enabled: false

    externalPostgresql:
      host: "postgres-primary.infrastructure.svc.cluster.local"
      port: 5432
      username: "synapse"
      existingSecret: "synapse-db-secret"
      existingSecretPasswordKey: POSTGRES_SYNAPSE_PASSWORD
      database: "synapse"

    externalRedis:
      host: dragonfly.infrastructure.svc.cluster.local
      port: 6379
      dbid: 1
      existingSecret: "synapse-secret"
      existingSecretPasswordKey: REDIS_PASSWORD

    synapse:
      strategy:
        type: Recreate
      resources:
        requests:
          cpu: 1000m
          memory: 2500Mi
        limits:
          memory: 2500Mi
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/_synapse/metrics"
        prometheus.io/port: "9090"
      extraVolumes:
        - name: discord-registration
          secret:
            secretName: matrix-bridge-discord-secret
      extraVolumeMounts:
        - name: discord-registration
          mountPath: /discord
          readOnly: true

    signingkey:
      job:
        enabled: false
      existingSecret: synapse-secret

    persistence:
      enabled: true
      existingClaim: *app
