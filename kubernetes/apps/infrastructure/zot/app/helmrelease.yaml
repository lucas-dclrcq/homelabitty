---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: zot
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            runAsUser: 1026
            runAsGroup: 100
            fsGroup: 100
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [10000]
            seccompProfile: { type: RuntimeDefault }

        containers:
          main:
            image:
              repository: ghcr.io/project-zot/zot-linux-amd64
              tag: v2.1.1
            probes:
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /v2/
                    port: 5000
                  initialDelaySeconds: 5
              readiness: *probe
              startup:
                enabled: false

    service:
      main:
        controller: main
        ports:
          http:
            port: 5000

    ingress:
      main:
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
        hosts:
          - host: "registry.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http

    persistence:
      config-file:
        type: configMap
        name: zot-configmap
        globalMounts:
          - path: /etc/zot/config.json
            subPath: config.json
            readOnly: true
      registry:
        type: nfs
        server: "nas.${INTERNAL_DOMAIN}"
        path: /volume1/Registry
        globalMounts:
          - path: /var/lib/registry
